//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.14.0
//     from Assets/Actions/RubixActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Rubix.Actions
{
    /// <summary>
    /// Provides programmatic access to <see cref="InputActionAsset" />, <see cref="InputActionMap" />, <see cref="InputAction" /> and <see cref="InputControlScheme" /> instances defined in asset "Assets/Actions/RubixActions.inputactions".
    /// </summary>
    /// <remarks>
    /// This class is source generated and any manual edits will be discarded if the associated asset is reimported or modified.
    /// </remarks>
    /// <example>
    /// <code>
    /// using namespace UnityEngine;
    /// using UnityEngine.InputSystem;
    ///
    /// // Example of using an InputActionMap named "Player" from a UnityEngine.MonoBehaviour implementing callback interface.
    /// public class Example : MonoBehaviour, MyActions.IPlayerActions
    /// {
    ///     private MyActions_Actions m_Actions;                  // Source code representation of asset.
    ///     private MyActions_Actions.PlayerActions m_Player;     // Source code representation of action map.
    ///
    ///     void Awake()
    ///     {
    ///         m_Actions = new MyActions_Actions();              // Create asset object.
    ///         m_Player = m_Actions.Player;                      // Extract action map object.
    ///         m_Player.AddCallbacks(this);                      // Register callback interface IPlayerActions.
    ///     }
    ///
    ///     void OnDestroy()
    ///     {
    ///         m_Actions.Dispose();                              // Destroy asset object.
    ///     }
    ///
    ///     void OnEnable()
    ///     {
    ///         m_Player.Enable();                                // Enable all actions within map.
    ///     }
    ///
    ///     void OnDisable()
    ///     {
    ///         m_Player.Disable();                               // Disable all actions within map.
    ///     }
    ///
    ///     #region Interface implementation of MyActions.IPlayerActions
    ///
    ///     // Invoked when "Move" action is either started, performed or canceled.
    ///     public void OnMove(InputAction.CallbackContext context)
    ///     {
    ///         Debug.Log($"OnMove: {context.ReadValue&lt;Vector2&gt;()}");
    ///     }
    ///
    ///     // Invoked when "Attack" action is either started, performed or canceled.
    ///     public void OnAttack(InputAction.CallbackContext context)
    ///     {
    ///         Debug.Log($"OnAttack: {context.ReadValue&lt;float&gt;()}");
    ///     }
    ///
    ///     #endregion
    /// }
    /// </code>
    /// </example>
    public partial class @RubixActions: IInputActionCollection2, IDisposable
    {
        /// <summary>
        /// Provides access to the underlying asset instance.
        /// </summary>
        public InputActionAsset asset { get; }

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public @RubixActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""RubixActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3aabd3db-640b-4bc8-9b2d-2c52c825556a"",
            ""actions"": [
                {
                    ""name"": ""OuterL"",
                    ""type"": ""Button"",
                    ""id"": ""ae5b5b8b-cae4-4a97-b7dd-7f1f10b4d482"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OuterR"",
                    ""type"": ""Button"",
                    ""id"": ""f0bfe440-2844-4bea-a91d-b5a6eb8497f9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OuterU"",
                    ""type"": ""Button"",
                    ""id"": ""c26ec892-9b3f-45cd-8459-a58b37d520ee"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OuterF"",
                    ""type"": ""Button"",
                    ""id"": ""baa08c4a-0379-41a2-8c54-6d9edabe7161"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OuterD"",
                    ""type"": ""Button"",
                    ""id"": ""a63a76c4-25f2-4a9e-9eea-559ec75a8e56"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OuterB"",
                    ""type"": ""Button"",
                    ""id"": ""062a89a2-3d1e-4ec0-b870-d302719568df"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BothL"",
                    ""type"": ""Button"",
                    ""id"": ""c3e6a427-f758-4312-b3b8-1f369b505b21"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BothR"",
                    ""type"": ""Button"",
                    ""id"": ""7854076d-a11f-4271-a133-6ad63164d1b8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BothU"",
                    ""type"": ""Button"",
                    ""id"": ""90c845d9-8760-48fc-904e-51af76366331"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BothD"",
                    ""type"": ""Button"",
                    ""id"": ""fe45b102-cac1-457d-aa70-baa850290896"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BothF"",
                    ""type"": ""Button"",
                    ""id"": ""783786bd-0524-46aa-8be7-f837f9d0723e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BothB"",
                    ""type"": ""Button"",
                    ""id"": ""0ed8bb1a-9a50-49db-ae36-b9b1e5fd9126"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InnerL"",
                    ""type"": ""Button"",
                    ""id"": ""2550e55a-30f0-4d94-972a-ac42de5cf41f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InnerR"",
                    ""type"": ""Button"",
                    ""id"": ""cd822229-ef5e-47de-b7f9-c4001dddb5f1"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InnerU"",
                    ""type"": ""Button"",
                    ""id"": ""12c041a9-72ba-41e1-8867-821da66d6195"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InnerD"",
                    ""type"": ""Button"",
                    ""id"": ""e59f87b1-30ee-461d-90c7-d40957771d5c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InnerF"",
                    ""type"": ""Button"",
                    ""id"": ""93b7e54f-950b-42bb-a52c-fdb2d55738d7"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InnerB"",
                    ""type"": ""Button"",
                    ""id"": ""59d3d1f3-0480-4a71-bfc7-e6cc0af7ddf6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MidLR"",
                    ""type"": ""Button"",
                    ""id"": ""4b5c5dc8-948c-48d3-9715-a988dd4ff56c"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MidUD"",
                    ""type"": ""Button"",
                    ""id"": ""fd9cf6d5-26f0-4e02-a32c-1a4b2cc7aaad"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MidFB"",
                    ""type"": ""Button"",
                    ""id"": ""aa5e3d08-59c7-4c41-8d06-255179a6d268"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AllLR"",
                    ""type"": ""Button"",
                    ""id"": ""bb19e40a-4a5b-4e3e-97f1-72fb84ec4b62"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AllUD"",
                    ""type"": ""Button"",
                    ""id"": ""4ecaa6b5-f4af-41d6-bf33-ddf9b87b6d18"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AllFB"",
                    ""type"": ""Button"",
                    ""id"": ""2634f9b3-22f4-4022-b44b-f4f4ba83629e"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Escape"",
                    ""type"": ""Button"",
                    ""id"": ""ec3db5d2-f04c-425b-8997-f52471555d0d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetView"",
                    ""type"": ""Button"",
                    ""id"": ""1cdae035-f1b0-4807-8176-88310a8b3fa6"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetConfiguration"",
                    ""type"": ""Button"",
                    ""id"": ""e7d2b206-3664-4b8e-abb5-5f8e0520aa07"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Destroy"",
                    ""type"": ""Button"",
                    ""id"": ""c452cf2a-9248-49dc-aa66-ea9fc950779f"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Random"",
                    ""type"": ""Button"",
                    ""id"": ""7f626715-ff38-4c3d-9bc5-c6a86a330211"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleFaceMapViewable"",
                    ""type"": ""Button"",
                    ""id"": ""bdb7300c-10eb-44ea-a1bf-1898f276771e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleMovesPanelViewable"",
                    ""type"": ""Button"",
                    ""id"": ""b33312da-a2a6-410c-97d4-9a94dc2b1c92"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleControlsPanelViewable"",
                    ""type"": ""Button"",
                    ""id"": ""a4220d12-44a5-4fda-b2a6-a1c8faa9a7aa"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleFaceMapTextures"",
                    ""type"": ""Button"",
                    ""id"": ""c3f55fd4-1f8c-4903-85ad-c9d96089d9b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CycleCubeTextures"",
                    ""type"": ""Button"",
                    ""id"": ""4ad3ada0-fee8-4543-82c6-918d6e083ca6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""577621ae-37ee-47a6-9617-74dad8e85e36"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseDelta"",
                    ""type"": ""Value"",
                    ""id"": ""ff800e9e-7e20-4011-ae90-28c79c1fce01"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""1b031401-9f6e-4c22-ac0b-ff830c4794de"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": ""Tap"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Value"",
                    ""id"": ""a7173be4-975e-4913-9e33-4bdab601b3ed"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Reassemble"",
                    ""type"": ""Button"",
                    ""id"": ""46a9082e-f0bc-4c51-bf46-948e8cd41952"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6684c691-6f79-46eb-ae9e-84e72ac2c97a"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OuterL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6fa02e67-8e99-4fbf-a91f-31cd2b949cbf"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BothL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8020024b-ed51-472e-bfa8-ff3f1332ffd9"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InnerL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46696267-b121-4f52-8392-141f2e8a58cf"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OuterR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""943a934f-3698-4eac-bb92-3b909d5afb9d"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BothR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b8c1aa48-bf92-40d3-9ce7-676221f433b8"",
                    ""path"": ""<Keyboard>/h"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BothU"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e82297e5-a65e-4d05-b8d5-1c7131fc18e3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InnerD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6de1257-d761-4602-92aa-b06a84b71eb5"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OuterU"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72f17de2-f7a7-4f1f-bd28-bcb0de775591"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OuterD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""440b5610-c6d7-43c7-8572-57bfca563d41"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BothD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2169bbb8-a216-4a11-9f15-c6983fad4f49"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InnerR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5237cc9-ca3c-4a66-a9ad-67cafc66132a"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InnerU"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3dc83f4c-ec4e-455c-87b6-ef1975f2f463"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OuterF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e15c90ed-32c4-4044-ad66-e9895cff090f"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OuterB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""39895cdb-026a-4fe8-bf71-ffa5a9015efd"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BothF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""595fbf9b-aa98-41cd-8772-9a1a0e684a1f"",
                    ""path"": ""<Keyboard>/n"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BothB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b592202-bf51-48e8-810a-5d96f2fcb133"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InnerB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""559e1022-5cd1-412e-8fc5-9b2d19c6bf16"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InnerF"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7c127a3-f8e0-41f6-9e7a-94927b8de8ae"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MidLR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03d56806-3f0c-4b39-996e-f61052d05cf8"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MidUD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0097245e-48ba-4bbf-ace6-30652b4670cc"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MidFB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ce3881e-d336-49b1-af8b-1fb3d179e693"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AllLR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""02a37fbb-4a10-482b-9f2f-bfeeed0ca889"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AllUD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59f63c3f-d822-41ef-8369-1646a600aa56"",
                    ""path"": ""<Keyboard>/comma"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""AllFB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e6cd1832-c87c-4df9-a9f5-99d08a18b4b3"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetConfiguration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdf22ecf-ee38-44fe-9482-a2551f537782"",
                    ""path"": ""<Keyboard>/delete"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34a011d8-e189-4cd5-a4bf-cfba7a2182ff"",
                    ""path"": ""<Keyboard>/backspace"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Destroy"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a5a62de-4205-468d-9aa5-a9c2bf7492c9"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Random"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db42b2bf-030b-4436-9096-26f582714c32"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleFaceMapViewable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d263de29-4a57-4302-92d5-c54a1ec5e1b0"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleMovesPanelViewable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4042091f-f3a1-4bc2-972b-235c1e6ef450"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleControlsPanelViewable"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a1a7b5d8-e96c-4a83-b460-85109968ac67"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleFaceMapTextures"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a3445352-93f0-4de8-958d-2d76d1de4c5f"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CycleCubeTextures"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""11bb22df-b7ae-4605-970e-0817ae558a5a"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""MouseDelta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""247b7b55-f906-4818-81c6-9365fc2143f3"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ResetView"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""23360977-136d-47aa-8f41-0b87df3fecf8"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Escape"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a71d0dc4-3d15-46b0-b6e0-9453a81fbef3"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""654bf9a0-e0c9-419e-9da3-8e201c34e123"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f20608eb-aa6b-4d41-ad5a-f6c3198c1227"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ab5aaba-4230-469c-a43d-7aee99588da0"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reassemble"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Player
            m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
            m_Player_OuterL = m_Player.FindAction("OuterL", throwIfNotFound: true);
            m_Player_OuterR = m_Player.FindAction("OuterR", throwIfNotFound: true);
            m_Player_OuterU = m_Player.FindAction("OuterU", throwIfNotFound: true);
            m_Player_OuterF = m_Player.FindAction("OuterF", throwIfNotFound: true);
            m_Player_OuterD = m_Player.FindAction("OuterD", throwIfNotFound: true);
            m_Player_OuterB = m_Player.FindAction("OuterB", throwIfNotFound: true);
            m_Player_BothL = m_Player.FindAction("BothL", throwIfNotFound: true);
            m_Player_BothR = m_Player.FindAction("BothR", throwIfNotFound: true);
            m_Player_BothU = m_Player.FindAction("BothU", throwIfNotFound: true);
            m_Player_BothD = m_Player.FindAction("BothD", throwIfNotFound: true);
            m_Player_BothF = m_Player.FindAction("BothF", throwIfNotFound: true);
            m_Player_BothB = m_Player.FindAction("BothB", throwIfNotFound: true);
            m_Player_InnerL = m_Player.FindAction("InnerL", throwIfNotFound: true);
            m_Player_InnerR = m_Player.FindAction("InnerR", throwIfNotFound: true);
            m_Player_InnerU = m_Player.FindAction("InnerU", throwIfNotFound: true);
            m_Player_InnerD = m_Player.FindAction("InnerD", throwIfNotFound: true);
            m_Player_InnerF = m_Player.FindAction("InnerF", throwIfNotFound: true);
            m_Player_InnerB = m_Player.FindAction("InnerB", throwIfNotFound: true);
            m_Player_MidLR = m_Player.FindAction("MidLR", throwIfNotFound: true);
            m_Player_MidUD = m_Player.FindAction("MidUD", throwIfNotFound: true);
            m_Player_MidFB = m_Player.FindAction("MidFB", throwIfNotFound: true);
            m_Player_AllLR = m_Player.FindAction("AllLR", throwIfNotFound: true);
            m_Player_AllUD = m_Player.FindAction("AllUD", throwIfNotFound: true);
            m_Player_AllFB = m_Player.FindAction("AllFB", throwIfNotFound: true);
            m_Player_Escape = m_Player.FindAction("Escape", throwIfNotFound: true);
            m_Player_ResetView = m_Player.FindAction("ResetView", throwIfNotFound: true);
            m_Player_ResetConfiguration = m_Player.FindAction("ResetConfiguration", throwIfNotFound: true);
            m_Player_Destroy = m_Player.FindAction("Destroy", throwIfNotFound: true);
            m_Player_Random = m_Player.FindAction("Random", throwIfNotFound: true);
            m_Player_ToggleFaceMapViewable = m_Player.FindAction("ToggleFaceMapViewable", throwIfNotFound: true);
            m_Player_ToggleMovesPanelViewable = m_Player.FindAction("ToggleMovesPanelViewable", throwIfNotFound: true);
            m_Player_ToggleControlsPanelViewable = m_Player.FindAction("ToggleControlsPanelViewable", throwIfNotFound: true);
            m_Player_CycleFaceMapTextures = m_Player.FindAction("CycleFaceMapTextures", throwIfNotFound: true);
            m_Player_CycleCubeTextures = m_Player.FindAction("CycleCubeTextures", throwIfNotFound: true);
            m_Player_Zoom = m_Player.FindAction("Zoom", throwIfNotFound: true);
            m_Player_MouseDelta = m_Player.FindAction("MouseDelta", throwIfNotFound: true);
            m_Player_Debug = m_Player.FindAction("Debug", throwIfNotFound: true);
            m_Player_MouseClick = m_Player.FindAction("MouseClick", throwIfNotFound: true);
            m_Player_Reassemble = m_Player.FindAction("Reassemble", throwIfNotFound: true);
        }

        ~@RubixActions()
        {
            UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, RubixActions.Player.Disable() has not been called.");
        }

        /// <summary>
        /// Destroys this asset and all associated <see cref="InputAction"/> instances.
        /// </summary>
        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindingMask" />
        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.devices" />
        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.controlSchemes" />
        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Contains(InputAction)" />
        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.GetEnumerator()" />
        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        /// <inheritdoc cref="IEnumerable.GetEnumerator()" />
        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Enable()" />
        public void Enable()
        {
            asset.Enable();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.Disable()" />
        public void Disable()
        {
            asset.Disable();
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.bindings" />
        public IEnumerable<InputBinding> bindings => asset.bindings;

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindAction(string, bool)" />
        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        /// <inheritdoc cref="UnityEngine.InputSystem.InputActionAsset.FindBinding(InputBinding, out InputAction)" />
        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Player
        private readonly InputActionMap m_Player;
        private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
        private readonly InputAction m_Player_OuterL;
        private readonly InputAction m_Player_OuterR;
        private readonly InputAction m_Player_OuterU;
        private readonly InputAction m_Player_OuterF;
        private readonly InputAction m_Player_OuterD;
        private readonly InputAction m_Player_OuterB;
        private readonly InputAction m_Player_BothL;
        private readonly InputAction m_Player_BothR;
        private readonly InputAction m_Player_BothU;
        private readonly InputAction m_Player_BothD;
        private readonly InputAction m_Player_BothF;
        private readonly InputAction m_Player_BothB;
        private readonly InputAction m_Player_InnerL;
        private readonly InputAction m_Player_InnerR;
        private readonly InputAction m_Player_InnerU;
        private readonly InputAction m_Player_InnerD;
        private readonly InputAction m_Player_InnerF;
        private readonly InputAction m_Player_InnerB;
        private readonly InputAction m_Player_MidLR;
        private readonly InputAction m_Player_MidUD;
        private readonly InputAction m_Player_MidFB;
        private readonly InputAction m_Player_AllLR;
        private readonly InputAction m_Player_AllUD;
        private readonly InputAction m_Player_AllFB;
        private readonly InputAction m_Player_Escape;
        private readonly InputAction m_Player_ResetView;
        private readonly InputAction m_Player_ResetConfiguration;
        private readonly InputAction m_Player_Destroy;
        private readonly InputAction m_Player_Random;
        private readonly InputAction m_Player_ToggleFaceMapViewable;
        private readonly InputAction m_Player_ToggleMovesPanelViewable;
        private readonly InputAction m_Player_ToggleControlsPanelViewable;
        private readonly InputAction m_Player_CycleFaceMapTextures;
        private readonly InputAction m_Player_CycleCubeTextures;
        private readonly InputAction m_Player_Zoom;
        private readonly InputAction m_Player_MouseDelta;
        private readonly InputAction m_Player_Debug;
        private readonly InputAction m_Player_MouseClick;
        private readonly InputAction m_Player_Reassemble;
        /// <summary>
        /// Provides access to input actions defined in input action map "Player".
        /// </summary>
        public struct PlayerActions
        {
            private @RubixActions m_Wrapper;

            /// <summary>
            /// Construct a new instance of the input action map wrapper class.
            /// </summary>
            public PlayerActions(@RubixActions wrapper) { m_Wrapper = wrapper; }
            /// <summary>
            /// Provides access to the underlying input action "Player/OuterL".
            /// </summary>
            public InputAction @OuterL => m_Wrapper.m_Player_OuterL;
            /// <summary>
            /// Provides access to the underlying input action "Player/OuterR".
            /// </summary>
            public InputAction @OuterR => m_Wrapper.m_Player_OuterR;
            /// <summary>
            /// Provides access to the underlying input action "Player/OuterU".
            /// </summary>
            public InputAction @OuterU => m_Wrapper.m_Player_OuterU;
            /// <summary>
            /// Provides access to the underlying input action "Player/OuterF".
            /// </summary>
            public InputAction @OuterF => m_Wrapper.m_Player_OuterF;
            /// <summary>
            /// Provides access to the underlying input action "Player/OuterD".
            /// </summary>
            public InputAction @OuterD => m_Wrapper.m_Player_OuterD;
            /// <summary>
            /// Provides access to the underlying input action "Player/OuterB".
            /// </summary>
            public InputAction @OuterB => m_Wrapper.m_Player_OuterB;
            /// <summary>
            /// Provides access to the underlying input action "Player/BothL".
            /// </summary>
            public InputAction @BothL => m_Wrapper.m_Player_BothL;
            /// <summary>
            /// Provides access to the underlying input action "Player/BothR".
            /// </summary>
            public InputAction @BothR => m_Wrapper.m_Player_BothR;
            /// <summary>
            /// Provides access to the underlying input action "Player/BothU".
            /// </summary>
            public InputAction @BothU => m_Wrapper.m_Player_BothU;
            /// <summary>
            /// Provides access to the underlying input action "Player/BothD".
            /// </summary>
            public InputAction @BothD => m_Wrapper.m_Player_BothD;
            /// <summary>
            /// Provides access to the underlying input action "Player/BothF".
            /// </summary>
            public InputAction @BothF => m_Wrapper.m_Player_BothF;
            /// <summary>
            /// Provides access to the underlying input action "Player/BothB".
            /// </summary>
            public InputAction @BothB => m_Wrapper.m_Player_BothB;
            /// <summary>
            /// Provides access to the underlying input action "Player/InnerL".
            /// </summary>
            public InputAction @InnerL => m_Wrapper.m_Player_InnerL;
            /// <summary>
            /// Provides access to the underlying input action "Player/InnerR".
            /// </summary>
            public InputAction @InnerR => m_Wrapper.m_Player_InnerR;
            /// <summary>
            /// Provides access to the underlying input action "Player/InnerU".
            /// </summary>
            public InputAction @InnerU => m_Wrapper.m_Player_InnerU;
            /// <summary>
            /// Provides access to the underlying input action "Player/InnerD".
            /// </summary>
            public InputAction @InnerD => m_Wrapper.m_Player_InnerD;
            /// <summary>
            /// Provides access to the underlying input action "Player/InnerF".
            /// </summary>
            public InputAction @InnerF => m_Wrapper.m_Player_InnerF;
            /// <summary>
            /// Provides access to the underlying input action "Player/InnerB".
            /// </summary>
            public InputAction @InnerB => m_Wrapper.m_Player_InnerB;
            /// <summary>
            /// Provides access to the underlying input action "Player/MidLR".
            /// </summary>
            public InputAction @MidLR => m_Wrapper.m_Player_MidLR;
            /// <summary>
            /// Provides access to the underlying input action "Player/MidUD".
            /// </summary>
            public InputAction @MidUD => m_Wrapper.m_Player_MidUD;
            /// <summary>
            /// Provides access to the underlying input action "Player/MidFB".
            /// </summary>
            public InputAction @MidFB => m_Wrapper.m_Player_MidFB;
            /// <summary>
            /// Provides access to the underlying input action "Player/AllLR".
            /// </summary>
            public InputAction @AllLR => m_Wrapper.m_Player_AllLR;
            /// <summary>
            /// Provides access to the underlying input action "Player/AllUD".
            /// </summary>
            public InputAction @AllUD => m_Wrapper.m_Player_AllUD;
            /// <summary>
            /// Provides access to the underlying input action "Player/AllFB".
            /// </summary>
            public InputAction @AllFB => m_Wrapper.m_Player_AllFB;
            /// <summary>
            /// Provides access to the underlying input action "Player/Escape".
            /// </summary>
            public InputAction @Escape => m_Wrapper.m_Player_Escape;
            /// <summary>
            /// Provides access to the underlying input action "Player/ResetView".
            /// </summary>
            public InputAction @ResetView => m_Wrapper.m_Player_ResetView;
            /// <summary>
            /// Provides access to the underlying input action "Player/ResetConfiguration".
            /// </summary>
            public InputAction @ResetConfiguration => m_Wrapper.m_Player_ResetConfiguration;
            /// <summary>
            /// Provides access to the underlying input action "Player/Destroy".
            /// </summary>
            public InputAction @Destroy => m_Wrapper.m_Player_Destroy;
            /// <summary>
            /// Provides access to the underlying input action "Player/Random".
            /// </summary>
            public InputAction @Random => m_Wrapper.m_Player_Random;
            /// <summary>
            /// Provides access to the underlying input action "Player/ToggleFaceMapViewable".
            /// </summary>
            public InputAction @ToggleFaceMapViewable => m_Wrapper.m_Player_ToggleFaceMapViewable;
            /// <summary>
            /// Provides access to the underlying input action "Player/ToggleMovesPanelViewable".
            /// </summary>
            public InputAction @ToggleMovesPanelViewable => m_Wrapper.m_Player_ToggleMovesPanelViewable;
            /// <summary>
            /// Provides access to the underlying input action "Player/ToggleControlsPanelViewable".
            /// </summary>
            public InputAction @ToggleControlsPanelViewable => m_Wrapper.m_Player_ToggleControlsPanelViewable;
            /// <summary>
            /// Provides access to the underlying input action "Player/CycleFaceMapTextures".
            /// </summary>
            public InputAction @CycleFaceMapTextures => m_Wrapper.m_Player_CycleFaceMapTextures;
            /// <summary>
            /// Provides access to the underlying input action "Player/CycleCubeTextures".
            /// </summary>
            public InputAction @CycleCubeTextures => m_Wrapper.m_Player_CycleCubeTextures;
            /// <summary>
            /// Provides access to the underlying input action "Player/Zoom".
            /// </summary>
            public InputAction @Zoom => m_Wrapper.m_Player_Zoom;
            /// <summary>
            /// Provides access to the underlying input action "Player/MouseDelta".
            /// </summary>
            public InputAction @MouseDelta => m_Wrapper.m_Player_MouseDelta;
            /// <summary>
            /// Provides access to the underlying input action "Player/Debug".
            /// </summary>
            public InputAction @Debug => m_Wrapper.m_Player_Debug;
            /// <summary>
            /// Provides access to the underlying input action "Player/MouseClick".
            /// </summary>
            public InputAction @MouseClick => m_Wrapper.m_Player_MouseClick;
            /// <summary>
            /// Provides access to the underlying input action "Player/Reassemble".
            /// </summary>
            public InputAction @Reassemble => m_Wrapper.m_Player_Reassemble;
            /// <summary>
            /// Provides access to the underlying input action map instance.
            /// </summary>
            public InputActionMap Get() { return m_Wrapper.m_Player; }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Enable()" />
            public void Enable() { Get().Enable(); }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.Disable()" />
            public void Disable() { Get().Disable(); }
            /// <inheritdoc cref="UnityEngine.InputSystem.InputActionMap.enabled" />
            public bool enabled => Get().enabled;
            /// <summary>
            /// Implicitly converts an <see ref="PlayerActions" /> to an <see ref="InputActionMap" /> instance.
            /// </summary>
            public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
            /// <summary>
            /// Adds <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
            /// </summary>
            /// <param name="instance">Callback instance.</param>
            /// <remarks>
            /// If <paramref name="instance" /> is <c>null</c> or <paramref name="instance"/> have already been added this method does nothing.
            /// </remarks>
            /// <seealso cref="PlayerActions" />
            public void AddCallbacks(IPlayerActions instance)
            {
                if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
                @OuterL.started += instance.OnOuterL;
                @OuterL.performed += instance.OnOuterL;
                @OuterL.canceled += instance.OnOuterL;
                @OuterR.started += instance.OnOuterR;
                @OuterR.performed += instance.OnOuterR;
                @OuterR.canceled += instance.OnOuterR;
                @OuterU.started += instance.OnOuterU;
                @OuterU.performed += instance.OnOuterU;
                @OuterU.canceled += instance.OnOuterU;
                @OuterF.started += instance.OnOuterF;
                @OuterF.performed += instance.OnOuterF;
                @OuterF.canceled += instance.OnOuterF;
                @OuterD.started += instance.OnOuterD;
                @OuterD.performed += instance.OnOuterD;
                @OuterD.canceled += instance.OnOuterD;
                @OuterB.started += instance.OnOuterB;
                @OuterB.performed += instance.OnOuterB;
                @OuterB.canceled += instance.OnOuterB;
                @BothL.started += instance.OnBothL;
                @BothL.performed += instance.OnBothL;
                @BothL.canceled += instance.OnBothL;
                @BothR.started += instance.OnBothR;
                @BothR.performed += instance.OnBothR;
                @BothR.canceled += instance.OnBothR;
                @BothU.started += instance.OnBothU;
                @BothU.performed += instance.OnBothU;
                @BothU.canceled += instance.OnBothU;
                @BothD.started += instance.OnBothD;
                @BothD.performed += instance.OnBothD;
                @BothD.canceled += instance.OnBothD;
                @BothF.started += instance.OnBothF;
                @BothF.performed += instance.OnBothF;
                @BothF.canceled += instance.OnBothF;
                @BothB.started += instance.OnBothB;
                @BothB.performed += instance.OnBothB;
                @BothB.canceled += instance.OnBothB;
                @InnerL.started += instance.OnInnerL;
                @InnerL.performed += instance.OnInnerL;
                @InnerL.canceled += instance.OnInnerL;
                @InnerR.started += instance.OnInnerR;
                @InnerR.performed += instance.OnInnerR;
                @InnerR.canceled += instance.OnInnerR;
                @InnerU.started += instance.OnInnerU;
                @InnerU.performed += instance.OnInnerU;
                @InnerU.canceled += instance.OnInnerU;
                @InnerD.started += instance.OnInnerD;
                @InnerD.performed += instance.OnInnerD;
                @InnerD.canceled += instance.OnInnerD;
                @InnerF.started += instance.OnInnerF;
                @InnerF.performed += instance.OnInnerF;
                @InnerF.canceled += instance.OnInnerF;
                @InnerB.started += instance.OnInnerB;
                @InnerB.performed += instance.OnInnerB;
                @InnerB.canceled += instance.OnInnerB;
                @MidLR.started += instance.OnMidLR;
                @MidLR.performed += instance.OnMidLR;
                @MidLR.canceled += instance.OnMidLR;
                @MidUD.started += instance.OnMidUD;
                @MidUD.performed += instance.OnMidUD;
                @MidUD.canceled += instance.OnMidUD;
                @MidFB.started += instance.OnMidFB;
                @MidFB.performed += instance.OnMidFB;
                @MidFB.canceled += instance.OnMidFB;
                @AllLR.started += instance.OnAllLR;
                @AllLR.performed += instance.OnAllLR;
                @AllLR.canceled += instance.OnAllLR;
                @AllUD.started += instance.OnAllUD;
                @AllUD.performed += instance.OnAllUD;
                @AllUD.canceled += instance.OnAllUD;
                @AllFB.started += instance.OnAllFB;
                @AllFB.performed += instance.OnAllFB;
                @AllFB.canceled += instance.OnAllFB;
                @Escape.started += instance.OnEscape;
                @Escape.performed += instance.OnEscape;
                @Escape.canceled += instance.OnEscape;
                @ResetView.started += instance.OnResetView;
                @ResetView.performed += instance.OnResetView;
                @ResetView.canceled += instance.OnResetView;
                @ResetConfiguration.started += instance.OnResetConfiguration;
                @ResetConfiguration.performed += instance.OnResetConfiguration;
                @ResetConfiguration.canceled += instance.OnResetConfiguration;
                @Destroy.started += instance.OnDestroy;
                @Destroy.performed += instance.OnDestroy;
                @Destroy.canceled += instance.OnDestroy;
                @Random.started += instance.OnRandom;
                @Random.performed += instance.OnRandom;
                @Random.canceled += instance.OnRandom;
                @ToggleFaceMapViewable.started += instance.OnToggleFaceMapViewable;
                @ToggleFaceMapViewable.performed += instance.OnToggleFaceMapViewable;
                @ToggleFaceMapViewable.canceled += instance.OnToggleFaceMapViewable;
                @ToggleMovesPanelViewable.started += instance.OnToggleMovesPanelViewable;
                @ToggleMovesPanelViewable.performed += instance.OnToggleMovesPanelViewable;
                @ToggleMovesPanelViewable.canceled += instance.OnToggleMovesPanelViewable;
                @ToggleControlsPanelViewable.started += instance.OnToggleControlsPanelViewable;
                @ToggleControlsPanelViewable.performed += instance.OnToggleControlsPanelViewable;
                @ToggleControlsPanelViewable.canceled += instance.OnToggleControlsPanelViewable;
                @CycleFaceMapTextures.started += instance.OnCycleFaceMapTextures;
                @CycleFaceMapTextures.performed += instance.OnCycleFaceMapTextures;
                @CycleFaceMapTextures.canceled += instance.OnCycleFaceMapTextures;
                @CycleCubeTextures.started += instance.OnCycleCubeTextures;
                @CycleCubeTextures.performed += instance.OnCycleCubeTextures;
                @CycleCubeTextures.canceled += instance.OnCycleCubeTextures;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @MouseDelta.started += instance.OnMouseDelta;
                @MouseDelta.performed += instance.OnMouseDelta;
                @MouseDelta.canceled += instance.OnMouseDelta;
                @Debug.started += instance.OnDebug;
                @Debug.performed += instance.OnDebug;
                @Debug.canceled += instance.OnDebug;
                @MouseClick.started += instance.OnMouseClick;
                @MouseClick.performed += instance.OnMouseClick;
                @MouseClick.canceled += instance.OnMouseClick;
                @Reassemble.started += instance.OnReassemble;
                @Reassemble.performed += instance.OnReassemble;
                @Reassemble.canceled += instance.OnReassemble;
            }

            /// <summary>
            /// Removes <see cref="InputAction.started"/>, <see cref="InputAction.performed"/> and <see cref="InputAction.canceled"/> callbacks provided via <param cref="instance" /> on all input actions contained in this map.
            /// </summary>
            /// <remarks>
            /// Calling this method when <paramref name="instance" /> have not previously been registered has no side-effects.
            /// </remarks>
            /// <seealso cref="PlayerActions" />
            private void UnregisterCallbacks(IPlayerActions instance)
            {
                @OuterL.started -= instance.OnOuterL;
                @OuterL.performed -= instance.OnOuterL;
                @OuterL.canceled -= instance.OnOuterL;
                @OuterR.started -= instance.OnOuterR;
                @OuterR.performed -= instance.OnOuterR;
                @OuterR.canceled -= instance.OnOuterR;
                @OuterU.started -= instance.OnOuterU;
                @OuterU.performed -= instance.OnOuterU;
                @OuterU.canceled -= instance.OnOuterU;
                @OuterF.started -= instance.OnOuterF;
                @OuterF.performed -= instance.OnOuterF;
                @OuterF.canceled -= instance.OnOuterF;
                @OuterD.started -= instance.OnOuterD;
                @OuterD.performed -= instance.OnOuterD;
                @OuterD.canceled -= instance.OnOuterD;
                @OuterB.started -= instance.OnOuterB;
                @OuterB.performed -= instance.OnOuterB;
                @OuterB.canceled -= instance.OnOuterB;
                @BothL.started -= instance.OnBothL;
                @BothL.performed -= instance.OnBothL;
                @BothL.canceled -= instance.OnBothL;
                @BothR.started -= instance.OnBothR;
                @BothR.performed -= instance.OnBothR;
                @BothR.canceled -= instance.OnBothR;
                @BothU.started -= instance.OnBothU;
                @BothU.performed -= instance.OnBothU;
                @BothU.canceled -= instance.OnBothU;
                @BothD.started -= instance.OnBothD;
                @BothD.performed -= instance.OnBothD;
                @BothD.canceled -= instance.OnBothD;
                @BothF.started -= instance.OnBothF;
                @BothF.performed -= instance.OnBothF;
                @BothF.canceled -= instance.OnBothF;
                @BothB.started -= instance.OnBothB;
                @BothB.performed -= instance.OnBothB;
                @BothB.canceled -= instance.OnBothB;
                @InnerL.started -= instance.OnInnerL;
                @InnerL.performed -= instance.OnInnerL;
                @InnerL.canceled -= instance.OnInnerL;
                @InnerR.started -= instance.OnInnerR;
                @InnerR.performed -= instance.OnInnerR;
                @InnerR.canceled -= instance.OnInnerR;
                @InnerU.started -= instance.OnInnerU;
                @InnerU.performed -= instance.OnInnerU;
                @InnerU.canceled -= instance.OnInnerU;
                @InnerD.started -= instance.OnInnerD;
                @InnerD.performed -= instance.OnInnerD;
                @InnerD.canceled -= instance.OnInnerD;
                @InnerF.started -= instance.OnInnerF;
                @InnerF.performed -= instance.OnInnerF;
                @InnerF.canceled -= instance.OnInnerF;
                @InnerB.started -= instance.OnInnerB;
                @InnerB.performed -= instance.OnInnerB;
                @InnerB.canceled -= instance.OnInnerB;
                @MidLR.started -= instance.OnMidLR;
                @MidLR.performed -= instance.OnMidLR;
                @MidLR.canceled -= instance.OnMidLR;
                @MidUD.started -= instance.OnMidUD;
                @MidUD.performed -= instance.OnMidUD;
                @MidUD.canceled -= instance.OnMidUD;
                @MidFB.started -= instance.OnMidFB;
                @MidFB.performed -= instance.OnMidFB;
                @MidFB.canceled -= instance.OnMidFB;
                @AllLR.started -= instance.OnAllLR;
                @AllLR.performed -= instance.OnAllLR;
                @AllLR.canceled -= instance.OnAllLR;
                @AllUD.started -= instance.OnAllUD;
                @AllUD.performed -= instance.OnAllUD;
                @AllUD.canceled -= instance.OnAllUD;
                @AllFB.started -= instance.OnAllFB;
                @AllFB.performed -= instance.OnAllFB;
                @AllFB.canceled -= instance.OnAllFB;
                @Escape.started -= instance.OnEscape;
                @Escape.performed -= instance.OnEscape;
                @Escape.canceled -= instance.OnEscape;
                @ResetView.started -= instance.OnResetView;
                @ResetView.performed -= instance.OnResetView;
                @ResetView.canceled -= instance.OnResetView;
                @ResetConfiguration.started -= instance.OnResetConfiguration;
                @ResetConfiguration.performed -= instance.OnResetConfiguration;
                @ResetConfiguration.canceled -= instance.OnResetConfiguration;
                @Destroy.started -= instance.OnDestroy;
                @Destroy.performed -= instance.OnDestroy;
                @Destroy.canceled -= instance.OnDestroy;
                @Random.started -= instance.OnRandom;
                @Random.performed -= instance.OnRandom;
                @Random.canceled -= instance.OnRandom;
                @ToggleFaceMapViewable.started -= instance.OnToggleFaceMapViewable;
                @ToggleFaceMapViewable.performed -= instance.OnToggleFaceMapViewable;
                @ToggleFaceMapViewable.canceled -= instance.OnToggleFaceMapViewable;
                @ToggleMovesPanelViewable.started -= instance.OnToggleMovesPanelViewable;
                @ToggleMovesPanelViewable.performed -= instance.OnToggleMovesPanelViewable;
                @ToggleMovesPanelViewable.canceled -= instance.OnToggleMovesPanelViewable;
                @ToggleControlsPanelViewable.started -= instance.OnToggleControlsPanelViewable;
                @ToggleControlsPanelViewable.performed -= instance.OnToggleControlsPanelViewable;
                @ToggleControlsPanelViewable.canceled -= instance.OnToggleControlsPanelViewable;
                @CycleFaceMapTextures.started -= instance.OnCycleFaceMapTextures;
                @CycleFaceMapTextures.performed -= instance.OnCycleFaceMapTextures;
                @CycleFaceMapTextures.canceled -= instance.OnCycleFaceMapTextures;
                @CycleCubeTextures.started -= instance.OnCycleCubeTextures;
                @CycleCubeTextures.performed -= instance.OnCycleCubeTextures;
                @CycleCubeTextures.canceled -= instance.OnCycleCubeTextures;
                @Zoom.started -= instance.OnZoom;
                @Zoom.performed -= instance.OnZoom;
                @Zoom.canceled -= instance.OnZoom;
                @MouseDelta.started -= instance.OnMouseDelta;
                @MouseDelta.performed -= instance.OnMouseDelta;
                @MouseDelta.canceled -= instance.OnMouseDelta;
                @Debug.started -= instance.OnDebug;
                @Debug.performed -= instance.OnDebug;
                @Debug.canceled -= instance.OnDebug;
                @MouseClick.started -= instance.OnMouseClick;
                @MouseClick.performed -= instance.OnMouseClick;
                @MouseClick.canceled -= instance.OnMouseClick;
                @Reassemble.started -= instance.OnReassemble;
                @Reassemble.performed -= instance.OnReassemble;
                @Reassemble.canceled -= instance.OnReassemble;
            }

            /// <summary>
            /// Unregisters <param cref="instance" /> and unregisters all input action callbacks via <see cref="PlayerActions.UnregisterCallbacks(IPlayerActions)" />.
            /// </summary>
            /// <seealso cref="PlayerActions.UnregisterCallbacks(IPlayerActions)" />
            public void RemoveCallbacks(IPlayerActions instance)
            {
                if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            /// <summary>
            /// Replaces all existing callback instances and previously registered input action callbacks associated with them with callbacks provided via <param cref="instance" />.
            /// </summary>
            /// <remarks>
            /// If <paramref name="instance" /> is <c>null</c>, calling this method will only unregister all existing callbacks but not register any new callbacks.
            /// </remarks>
            /// <seealso cref="PlayerActions.AddCallbacks(IPlayerActions)" />
            /// <seealso cref="PlayerActions.RemoveCallbacks(IPlayerActions)" />
            /// <seealso cref="PlayerActions.UnregisterCallbacks(IPlayerActions)" />
            public void SetCallbacks(IPlayerActions instance)
            {
                foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        /// <summary>
        /// Provides a new <see cref="PlayerActions" /> instance referencing this action map.
        /// </summary>
        public PlayerActions @Player => new PlayerActions(this);
        private int m_KeyboardMouseSchemeIndex = -1;
        /// <summary>
        /// Provides access to the input control scheme.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
        public InputControlScheme KeyboardMouseScheme
        {
            get
            {
                if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
                return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
            }
        }
        private int m_GamepadSchemeIndex = -1;
        /// <summary>
        /// Provides access to the input control scheme.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
        public InputControlScheme GamepadScheme
        {
            get
            {
                if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
                return asset.controlSchemes[m_GamepadSchemeIndex];
            }
        }
        private int m_TouchSchemeIndex = -1;
        /// <summary>
        /// Provides access to the input control scheme.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
        public InputControlScheme TouchScheme
        {
            get
            {
                if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
                return asset.controlSchemes[m_TouchSchemeIndex];
            }
        }
        private int m_JoystickSchemeIndex = -1;
        /// <summary>
        /// Provides access to the input control scheme.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
        public InputControlScheme JoystickScheme
        {
            get
            {
                if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
                return asset.controlSchemes[m_JoystickSchemeIndex];
            }
        }
        private int m_XRSchemeIndex = -1;
        /// <summary>
        /// Provides access to the input control scheme.
        /// </summary>
        /// <seealso cref="UnityEngine.InputSystem.InputControlScheme" />
        public InputControlScheme XRScheme
        {
            get
            {
                if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
                return asset.controlSchemes[m_XRSchemeIndex];
            }
        }
        /// <summary>
        /// Interface to implement callback methods for all input action callbacks associated with input actions defined by "Player" which allows adding and removing callbacks.
        /// </summary>
        /// <seealso cref="PlayerActions.AddCallbacks(IPlayerActions)" />
        /// <seealso cref="PlayerActions.RemoveCallbacks(IPlayerActions)" />
        public interface IPlayerActions
        {
            /// <summary>
            /// Method invoked when associated input action "OuterL" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnOuterL(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "OuterR" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnOuterR(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "OuterU" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnOuterU(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "OuterF" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnOuterF(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "OuterD" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnOuterD(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "OuterB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnOuterB(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "BothL" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnBothL(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "BothR" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnBothR(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "BothU" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnBothU(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "BothD" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnBothD(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "BothF" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnBothF(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "BothB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnBothB(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "InnerL" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInnerL(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "InnerR" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInnerR(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "InnerU" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInnerU(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "InnerD" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInnerD(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "InnerF" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInnerF(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "InnerB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnInnerB(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "MidLR" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMidLR(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "MidUD" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMidUD(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "MidFB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMidFB(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "AllLR" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnAllLR(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "AllUD" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnAllUD(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "AllFB" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnAllFB(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Escape" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnEscape(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "ResetView" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnResetView(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "ResetConfiguration" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnResetConfiguration(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Destroy" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnDestroy(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Random" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnRandom(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "ToggleFaceMapViewable" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnToggleFaceMapViewable(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "ToggleMovesPanelViewable" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnToggleMovesPanelViewable(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "ToggleControlsPanelViewable" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnToggleControlsPanelViewable(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "CycleFaceMapTextures" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnCycleFaceMapTextures(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "CycleCubeTextures" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnCycleCubeTextures(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Zoom" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnZoom(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "MouseDelta" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMouseDelta(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Debug" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnDebug(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "MouseClick" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnMouseClick(InputAction.CallbackContext context);
            /// <summary>
            /// Method invoked when associated input action "Reassemble" is either <see cref="UnityEngine.InputSystem.InputAction.started" />, <see cref="UnityEngine.InputSystem.InputAction.performed" /> or <see cref="UnityEngine.InputSystem.InputAction.canceled" />.
            /// </summary>
            /// <seealso cref="UnityEngine.InputSystem.InputAction.started" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.performed" />
            /// <seealso cref="UnityEngine.InputSystem.InputAction.canceled" />
            void OnReassemble(InputAction.CallbackContext context);
        }
    }
}
